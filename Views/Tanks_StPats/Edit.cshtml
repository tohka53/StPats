@model StPats.Models.Tanks_StPats

@{
    ViewBag.Title = "Edit Tank";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id_tanque)

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.codigo_tanque, "Code Tank", htmlAttributes: new { @class = "control-label col-md-2" }) </strong> 
            <div class="col-md-10">
                @Html.EditorFor(model => model.codigo_tanque, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.codigo_tanque, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong>  @Html.LabelFor(model => model.capacidad, "Capacity", htmlAttributes: new { @class = "control-label col-md-2" }) </strong>
            <div class="col-md-10">
                @Html.EditorFor(model => model.capacidad, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.capacidad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong>  @Html.LabelFor(model => model.bottom_valve, "Batton Valve", htmlAttributes: new { @class = "control-label col-md-2" }) </strong>   
            <div class="col-md-10">
                @Html.EditorFor(model => model.bottom_valve, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bottom_valve, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.manway, "ManWay", htmlAttributes: new { @class = "control-label col-md-2" }) </strong> 
            <div class="col-md-10">
                @Html.EditorFor(model => model.manway, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.manway, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.lifting_arm, "Lifting Arm", htmlAttributes: new { @class = "control-label col-md-2" }) </strong> 
            <div class="col-md-10">
                @Html.EditorFor(model => model.lifting_arm, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lifting_arm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong>  @Html.LabelFor(model => model.vent, "Vent", htmlAttributes: new { @class = "control-label col-md-2" })  </strong> 
            <div class="col-md-10">
                @Html.EditorFor(model => model.vent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.vent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.replacemnet_infiatable_gasket, "Replacemnet Infiatable Gasket", htmlAttributes: new { @class = "control -label col-md-2" }) </strong> 
            <div class="col-md-10">
                @Html.EditorFor(model => model.replacemnet_infiatable_gasket, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.replacemnet_infiatable_gasket, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.price, "Price", htmlAttributes: new { @class = "control-label col-md-2" }) </strong>   
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong>  @Html.LabelFor(model => model.stok, "Stock", htmlAttributes: new { @class = "control-label col-md-2" }) </strong> 
            <div class="col-md-10">
                @Html.EditorFor(model => model.stok, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.stok, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong>  @Html.LabelFor(model => model.location, "Location", htmlAttributes: new { @class = "control-label col-md-2" })</strong>
            <div class="col-md-10">
                @Html.DropDownList("location", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong>  @Html.LabelFor(model => model.manual, "Manual", htmlAttributes: new { @class = "control-label col-md-2" }) </strong> 
            <div class="col-md-10">
                @Html.EditorFor(model => model.manual, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.manual, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.image, "Image", htmlAttributes: new { @class = "control-label col-md-2" })  </strong>  
            <div class="col-md-10">
                @Html.EditorFor(model => model.image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <strong> @Html.LabelFor(model => model.desription, "Description", htmlAttributes: new { @class = "control-label col-md-2" })   </strong> 
            <div class="col-md-10">
                @Html.EditorFor(model => model.desription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.desription, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-success btn-sm" type="submit">
                    <span class="glyphicon glyphicon-backward"></span>&nbsp;Save Location
                </button>
            </div>
        </div>

    </div>
}

<div class="form-group">
    <button class="btn-bitbucket btn-sm" onclick="location.href = '@Url.Action("Index")'">
        <span class="glyphicon glyphicon-backward"></span>&nbsp; Back to last Page
    </button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
